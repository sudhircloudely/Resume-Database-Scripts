DROP PROCEDURE IF EXISTS abi_newadmin.INSERTRESUMEAPPLICATION_2015;
CREATE PROCEDURE abi_newadmin.`INSERTRESUMEAPPLICATION_2015`(   IN p_resumeType varchar(255),
    IN p_contactPreference varchar(255),
    IN p_timeFrameAvailable varchar(255),
    IN p_locationPreference varchar(255),
    IN p_firstName  varchar(255),
    IN p_lastName  varchar(255),
    IN p_us_citizen_2  varchar(255),
    IN p_us_citizen  varchar(255),
    IN p_phone  varchar(255),
    IN p_email  varchar(255),
    IN p_affiliation  varchar(255),
    IN p_address  varchar(255),	
    IN p_city  varchar(255),
    IN p_state  varchar(255),
    IN p_region  varchar(255),
    IN p_zipCode  varchar(255),
    IN p_country  varchar(255),
    IN p_interest1  varchar(255),
    IN p_interest2  varchar(255),
    IN p_interest3  varchar(255),
    IN p_interest4  varchar(255),
    IN p_interest5  varchar(255),
    IN p_interest6  varchar(255),
    IN p_interest7  varchar(255),
    IN p_interest8  varchar(255),
    IN p_interest9  varchar(255),
    IN p_interest10  varchar(255),
    IN p_interest11  varchar(255),
    IN p_interest12  varchar(255),
    IN p_interest13 varchar(255),
    IN p_interest14 varchar(255),
    IN p_cat1 varchar(255),
    IN p_cat2 varchar(255),
    IN p_cat3 varchar(255),
    IN p_cat4 varchar(255),
    IN p_cat5 varchar(255),
    IN p_cat6  varchar(255),
    IN p_cat7 varchar(255),
    IN p_cat8  varchar(255),
    IN p_cat9  varchar(255),
    IN p_cat10  varchar(255),
    IN p_cat11  varchar(255),
    IN p_cat12  varchar(255),
    IN p_cat13  varchar(255),
    IN p_cat14  varchar(255),
    IN p_cat15  varchar(255),
    IN p_cat16  varchar(255),
    IN p_cat17  varchar(255),
    IN p_cat18  varchar(255),
    IN p_cat19  varchar(255),
    IN p_cat20  varchar(255),
    IN p_cat21  varchar(255),
    IN p_cat22  varchar(255),
    IN p_cat23  varchar(255),
    IN p_cat24  varchar(255),
    IN p_cat25  varchar(255),
    IN p_cat26  varchar(255),
    IN p_cat27 varchar(255),
    IN p_cat28  varchar(255),
    IN p_attendingGHC  varchar(255),
    IN p_gpa  varchar(255),
    IN p_major  varchar(255),
    IN p_edu_status  varchar(255),
    IN p_currentJobStatus  varchar(255),
    IN p_leadStatus varchar(255),
	IN p_Site  varchar(255),
    IN p_Year  varchar(255),
	  IN p_india_citizen  varchar(255),
	  IN p_questionFirst  varchar(255),
	  IN p_questionSecond  varchar(255),
	  IN p_questionThird varchar(255),
	  IN p_experience1  varchar(255), 
	  IN p_experience2  varchar(255), 
	  IN p_experience3  varchar(255), 
	  IN p_experience4  varchar(255), 
	  IN p_experience5  varchar(255), 
	  IN p_experience6  varchar(255), 
	  IN p_experience7 varchar(255), 
	  IN p_experience8  varchar(255), 
	  IN p_experience9  varchar(255), 
	  IN p_experience10  varchar(255),
	  IN p_experience11  varchar(255), 
	  IN p_experience12  varchar(255), 
	  IN p_experience13  varchar(255), 
	  IN p_experience14  varchar(255), 
	  IN p_experience15  varchar(255), 
	  IN p_experience16  varchar(255), 
  	 IN p_experience17  varchar(255), 
	  IN p_experience18  varchar(255), 
	  IN p_experience19  varchar(255),  
	  IN p_experience20  varchar(255), 
	  IN p_experience21  varchar(255), 
	  IN p_skills  varchar(255), 
	  IN p_comment  varchar(255),
	  IN p_resume_name  varchar(255), 
	  IN p_breakquestion_1  varchar(255), 
	  IN p_breakquestion_2  varchar(255),
	  IN p_userType  varchar(255),
	  IN p_jobtitle  varchar(255),
	  IN p_student_info_chk  varchar(255),
    IN p_emailid varchar(255), 
    IN p_password varchar(255),      
    IN p_leadid  varchar(255),
    OUT o_unique_email  integer
    )
BEGIN

/* Variable to check unique email */
DECLARE count_email integer;
DECLARE l_resume_id integer;

/* Exception handling to roll back */
DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN        
        ROLLBACK;         
    END;
COMMIT;

  /* Check email exist of not in table */
  SELECT count(email) into count_email from resumeApplicants2015 where upper(email) = upper(p_email);  
      
    IF ( count_email > 0 ) THEN     
    SET o_unique_email = 1;         /* Out Parameter is set to 1 */
    
   ELSE 
    
    START TRANSACTION; /* Checks for multiple transactions and allows only one */
    
   
     INSERT INTO resumeApplicants2015 
  (createDate,
   resumeType,
   contactPreference,
   timeFrameAvailable,
   locationPreference,
   firstName,
   lastName,
   us_citizen_2,
   us_citizen,
   phone,
   email,
   affiliation,
   address,
   city,
   state,
   region,
   zipCode,
   country,
   interest1,
   interest2,
   interest3,
   interest4,
   interest5,
   interest6,
   interest7,
   interest8,
   interest9,
   interest10,
   interest11,
   interest12,
   interest13,
   interest14,
   cat1,
   cat2,
   cat3,
   cat4,
   cat5,
   cat6,
   cat7,
   cat8,
   cat9,
   cat10,
   cat11,
   cat12,
   cat13,
   cat14,
   cat15,
   cat16,
   cat17,
   cat18,
   cat19,
   cat20,
   cat21,
   cat22,
   cat23,
   cat24,
   cat25,
   cat26,
   cat27,
   cat28,
   attendingGHC,
   gpa,
   major,
   edu_status,
   currentJobStatus,
   leadStatus,Site,
   Year,
	india_citizen,
	questionFirst,
	questionSecond,
	questionThird,
	experience1, 
	experience2, 
	experience3, 
	experience4, 
	experience5, 
	experience6, 
	experience7, 
	experience8, 
	experience9, 
	experience10,
	experience11, 
	experience12, 
	experience13, 
	experience14, 
	experience15, 
	experience16, 
	experience17, 
	experience18, 
	experience19, 
	experience20, 
	experience21, 
	skills, 
	comment,
	resume_name, 
	breakquestion_1, 
	breakquestion_2,
	userType,
	jobtitle,
	student_info_chk) 
  VALUES 
  ( CURDATE(), 
       p_resumeType, 
     p_contactPreference ,
     p_timeFrameAvailable,
     p_locationPreference ,
     p_firstName  ,
     p_lastName  ,
     p_us_citizen_2,  
     p_us_citizen  ,
     p_phone  ,
     p_email  ,
     p_affiliation  ,
     p_address  	,
     p_city  ,
     p_state  ,
     p_region  ,
     p_zipCode  ,
     p_country  ,
     p_terest1  ,
     p_terest2  ,
     p_terest3  ,
     p_terest4  ,
     p_terest5  ,
     p_terest6  ,
     p_terest7  ,
     p_terest8  ,
     p_terest9  ,
     p_terest10  ,
     p_terest11  ,
     p_terest12  ,
     p_terest13 ,
     p_terest14 ,
     p_cat1 ,
     p_cat2 ,
     p_cat3 ,
     p_cat4 ,
     p_cat5 ,
     p_cat6  ,
     p_cat7 ,
     p_cat8  ,
     p_cat9  ,
     p_cat10  ,
     p_cat11  ,
     p_cat12  ,
     p_cat13  ,
     p_cat14  ,
     p_cat15  ,
     p_cat16  ,
     p_cat17  ,
     p_cat18  ,
     p_cat19  ,
     p_cat20  ,
     p_cat21  ,
     p_cat22  ,
     p_cat23  ,
     p_cat24  ,
     p_cat25  ,
     p_cat26  ,
     p_cat27 ,
     p_cat28  ,
     p_attendgGHC,  
     p_gpa  ,
     p_major , 
     p_edu_status,  
     p_currentJobStatus  ,
     p_leadStatus,Site  ,
     p_Year  ,
	 p_dia_citizen  ,
	 p_questionFirst  ,
	 p_questionSecond  ,
	 p_questionThird ,
	 p_experience1   ,
	 p_experience2   ,
	 p_experience3   ,
	 p_experience4   ,
	 p_experience5   ,
	 p_experience6   ,
	 p_experience7  ,
	 p_experience8   ,
	 p_experience9   ,
	 p_experience10  ,
	 p_experience11   ,
	 p_experience12   ,
	 p_experience13   ,
	 p_experience14   ,
	 p_experience15   ,
	 p_experience16   ,
	 p_experience17   ,
	 p_experience18   ,
	 p_experience19    ,
	 p_experience20   ,
	 p_experience21   ,
	 p_skills   ,
	 p_comment  ,
	 p_resume_name   ,
	 p_breakquestion_1   ,
	 p_breakquestion_2  ,
	 p_userType  ,
	 p_jobtitle  ,
	 p_student_fo_chk);
   
   COMMIT;
   
   /* Get Last insert ID from Above Insert statement */
  set l_resume_id = LAST_INSERT_ID();
      
           INSERT INTO resumeApplicants2015_user 
     (emailid,password,resumeID,leadid) 
     VALUES 
     (p_emailid,p_password,l_resume_id,p_leadid);  
     
     COMMIT;
     
     
    END IF;    
        
END;
